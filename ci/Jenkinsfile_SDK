pipeline {
    agent {
        node {
            label "vagrant-ci"
        }
    }

    triggers {
        cron('H 4 * * *')
    }

    stages {
        stage('Test SDK') {
            steps {
                script {
                    stage("Cleanup SDK xunit files") {
                        sh """
                        rm -f ci/*xunit.xml
                        """
                    }
                    def tests_by_os = [:]
                    def data = readFile(file: 'ci/list_vm_2_test.txt')
                    
                    for (String os_paths : data.split("\n")) {
                        for (String os_path : os_paths.split(" ")) {
                            def local_os_path = os_path
                            //tests_by_os["Test SDK ${os_path}"] = {
                                        stage("Test SDK ${local_os_path} Master") {
                                            sh """
                                            cd ci
                                            ./run_SDK_ci.sh --vm-path ${local_os_path} --branch master --destroy
                                        """
                                        }
                                        stage("Test SDK ${local_os_path} Next") {
                                            sh """
                                            cd ci
                                            ./run_SDK_ci.sh --vm-path ${local_os_path} --branch next --destroy
                                        """
                                        }
                                        stage("Test SDK ${local_os_path} Upstream") {
                                            sh """
                                            cd ci
                                            ./run_SDK_ci.sh --vm-path ${local_os_path} --destroy
                                        """
                                        }
                            //    }
                        }
                    }

                    stage("Check result") {
                        sh """
                        grep '.error' ci/*xunit.xml && exit 1
                    """
                    }
                    //parallel tests_by_os
                }
            }
        }
    }
    post {
        always{
            junit 'ci/*xunit.xml'
        }
        failure {
            mail bcc: '',
            body: "<b>Job Error</b><br>Project: ${env.JOB_NAME} <br>Build Number: ${env.BUILD_NUMBER} <br> URL de build: <a href=${env.BUILD_URL}>${env.BUILD_URL}</a>",
            cc: '',
            charset: 'UTF-8',
            from: '',
            mimeType: 'text/html',
            replyTo: '',
            subject: "Jenkins ERROR CI: Project name -> ${env.JOB_NAME}",
            to: "${TESTS_SDK}"
        }
    }
}
